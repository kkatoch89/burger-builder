{"version":3,"sources":["components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css"],"names":["module","exports","checkoutSummary","props","className","styles","CheckoutSummary","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","connect","state","ings","burgerBuilder","price","totalPrice","loading","order","token","auth","userId","dispatch","onOrderBurger","orderData","actions","withErrorHandler","useState","name","elementType","elementConfig","type","placeholder","errorText","value","validation","required","valid","touched","street","postalCode","minLength","maxLength","country","email","deliveryMethod","options","displayValue","orderForm","setOrderForm","formIsValid","setFormIsValid","formElementsArray","key","push","id","config","form","onSubmit","e","preventDefault","formData","formElementID","orderHandler","map","formElement","Input","invalid","shouldValidate","changed","inputId","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","inputIdentifier","inputChangedHandler","disabled","Spinner","ContactData","axios","purchased","summary","to","purchasedRedirect","history","goBack","replace","path","match","url","component","input","inputElement","inputStyles","InputElement","Invalid","join","onChange","option","validationError","Label","label"],"mappings":"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","file":"static/js/3.21396929.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__125f4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3PRhR\"};","import React from 'react';\r\n\r\nimport styles from './CheckoutSummary.module.css';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst checkoutSummary = (props) => {\r\n\treturn (\r\n\t\t<div className={styles.CheckoutSummary}>\r\n\t\t\t<h1>We hope it tastes well!</h1>\r\n\t\t\t<div style={{ width: '100%', margin: 'auto' }}>\r\n\t\t\t\t<Burger ingredients={props.ingredients} />\r\n\t\t\t</div>\r\n\t\t\t<Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n\t\t\t\tCANCEL\r\n\t\t\t</Button>\r\n\t\t\t<Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n\t\t\t\tCONTINUE\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default checkoutSummary;\r\n","import React, { useState } from 'react';\r\nimport axios from '../../../axios-orders';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styles from './ContactData.module.css';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../components/hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { updateObject, checkValidity } from '../../../shared/utility';\r\n\r\nconst ContactData = (props) => {\r\n\tconst [orderForm, setOrderForm] = useState({\r\n\t\tname: {\r\n\t\t\telementType: 'input',\r\n\t\t\telementConfig: {\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\tplaceholder: 'Your Name',\r\n\t\t\t\terrorText: 'name',\r\n\t\t\t},\r\n\t\t\tvalue: '',\r\n\t\t\tvalidation: {\r\n\t\t\t\trequired: true,\r\n\t\t\t},\r\n\t\t\tvalid: false,\r\n\t\t\ttouched: false,\r\n\t\t},\r\n\t\tstreet: {\r\n\t\t\telementType: 'input',\r\n\t\t\telementConfig: {\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\tplaceholder: 'Street',\r\n\t\t\t\terrorText: 'street',\r\n\t\t\t},\r\n\t\t\tvalue: '',\r\n\t\t\tvalidation: {\r\n\t\t\t\trequired: true,\r\n\t\t\t},\r\n\t\t\tvalid: false,\r\n\t\t\ttouched: false,\r\n\t\t},\r\n\t\tpostalCode: {\r\n\t\t\telementType: 'input',\r\n\t\t\telementConfig: {\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\tplaceholder: 'Postal Code',\r\n\t\t\t\terrorText: 'postal code',\r\n\t\t\t},\r\n\t\t\tvalue: '',\r\n\t\t\tvalidation: {\r\n\t\t\t\trequired: true,\r\n\t\t\t\tminLength: 6,\r\n\t\t\t\tmaxLength: 6,\r\n\t\t\t},\r\n\t\t\tvalid: false,\r\n\t\t\ttouched: false,\r\n\t\t},\r\n\t\tcountry: {\r\n\t\t\telementType: 'input',\r\n\t\t\telementConfig: {\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\tplaceholder: 'Country',\r\n\t\t\t\terrorText: 'country',\r\n\t\t\t},\r\n\t\t\tvalue: '',\r\n\t\t\tvalidation: {\r\n\t\t\t\trequired: true,\r\n\t\t\t},\r\n\t\t\tvalid: false,\r\n\t\t\ttouched: false,\r\n\t\t},\r\n\t\temail: {\r\n\t\t\telementType: 'input',\r\n\t\t\telementConfig: {\r\n\t\t\t\ttype: 'email',\r\n\t\t\t\tplaceholder: 'Your E-Mail',\r\n\t\t\t\terrorText: 'email',\r\n\t\t\t},\r\n\t\t\tvalue: '',\r\n\t\t\tvalidation: {\r\n\t\t\t\trequired: true,\r\n\t\t\t},\r\n\t\t\tvalid: false,\r\n\t\t\ttouched: false,\r\n\t\t},\r\n\t\tdeliveryMethod: {\r\n\t\t\telementType: 'select',\r\n\t\t\telementConfig: {\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{ value: 'fastest', displayValue: 'Fastest' },\r\n\t\t\t\t\t{ value: 'cheapest', displayValue: 'Cheapest' },\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tvalidation: {},\r\n\t\t\tvalid: true,\r\n\t\t\tvalue: 'fastest',\r\n\t\t},\r\n\t});\r\n\r\n\tconst [formIsValid, setFormIsValid] = useState(false);\r\n\r\n\tconst orderHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst formData = {};\r\n\t\tfor (let formElementID in orderForm) {\r\n\t\t\tformData[formElementID] = orderForm[formElementID].value;\r\n\t\t}\r\n\t\tconst order = {\r\n\t\t\tingredients: props.ings,\r\n\t\t\tprice: props.price,\r\n\t\t\tformData,\r\n\t\t\tuserId: props.userId,\r\n\t\t};\r\n\t\tprops.onOrderBurger(order, props.token);\r\n\t};\r\n\r\n\tconst inputChangedHandler = (e, inputId) => {\r\n\t\t// Only need to create a deep copy until the level that you are changing value\r\n\t\tconst updatedFormElement = updateObject(orderForm[inputId], {\r\n\t\t\tvalue: e.target.value,\r\n\t\t\tvalid: checkValidity(e.target.value, orderForm[inputId].validation),\r\n\t\t\ttouched: true,\r\n\t\t});\r\n\r\n\t\tconst updatedOrderForm = updateObject(orderForm, {\r\n\t\t\t[inputId]: updatedFormElement,\r\n\t\t});\r\n\r\n\t\tlet formIsValid = true;\r\n\r\n\t\tfor (let inputIdentifier in updatedOrderForm) {\r\n\t\t\tformIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid; // To check if prev value of formIsValid is also true\r\n\t\t}\r\n\t\tsetOrderForm(updatedOrderForm);\r\n\t\tsetFormIsValid(formIsValid);\r\n\t};\r\n\r\n\tconst formElementsArray = [];\r\n\tfor (let key in orderForm) {\r\n\t\tformElementsArray.push({\r\n\t\t\tid: key,\r\n\t\t\tconfig: orderForm[key],\r\n\t\t});\r\n\t}\r\n\tlet form = (\r\n\t\t<form onSubmit={(e) => orderHandler(e)}>\r\n\t\t\t{formElementsArray.map((formElement) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tkey={formElement.id}\r\n\t\t\t\t\t\telementType={formElement.config.elementType}\r\n\t\t\t\t\t\telementConfig={formElement.config.elementConfig}\r\n\t\t\t\t\t\t// valueType={formElement.config.elementConfig}\r\n\t\t\t\t\t\tvalue={formElement.config.value}\r\n\t\t\t\t\t\tinvalid={!formElement.config.valid}\r\n\t\t\t\t\t\tshouldValidate={formElement.config.validation} //To remove validation from dropdown\r\n\t\t\t\t\t\ttouched={formElement.config.touched}\r\n\t\t\t\t\t\tchanged={(e) => {\r\n\t\t\t\t\t\t\tinputChangedHandler(e, formElement.id);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t<Button btnType=\"Success\" disabled={!formIsValid}>\r\n\t\t\t\tORDER\r\n\t\t\t</Button>\r\n\t\t</form>\r\n\t);\r\n\tif (props.loading) {\r\n\t\tform = <Spinner />;\r\n\t}\r\n\treturn (\r\n\t\t<div className={styles.ContactData}>\r\n\t\t\t<h4>Enter your Contact Data:</h4>\r\n\t\t\t{form}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tings: state.burgerBuilder.ingredients,\r\n\t\tprice: state.burgerBuilder.totalPrice,\r\n\t\tloading: state.order.loading,\r\n\t\ttoken: state.auth.token,\r\n\t\tuserId: state.auth.userId,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonOrderBurger: (orderData, token) =>\r\n\t\t\tdispatch(actions.purchaseBurger(orderData, token)),\r\n\t};\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withErrorHandler(ContactData, axios));\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nconst Checkout = (props) => {\r\n\tconst checkoutCancelledHandler = () => {\r\n\t\tprops.history.goBack();\r\n\t};\r\n\r\n\tconst checkoutContinuedHandler = () => {\r\n\t\tprops.history.replace('/checkout/contact-data');\r\n\t};\r\n\r\n\t// Before returning render, if there aren't any ingredients, we go to homepage\r\n\tlet summary = <Redirect to=\"/\" />;\r\n\tif (props.ings) {\r\n\t\tconst purchasedRedirect = props.purchased ? <Redirect to=\"/\" /> : null;\r\n\t\tsummary = (\r\n\t\t\t<div>\r\n\t\t\t\t{purchasedRedirect}\r\n\t\t\t\t<CheckoutSummary\r\n\t\t\t\t\tingredients={props.ings}\r\n\t\t\t\t\tcheckoutCancelled={checkoutCancelledHandler}\r\n\t\t\t\t\tcheckoutContinued={checkoutContinuedHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath={`${props.match.url}/contact-data`}\r\n\t\t\t\t\tcomponent={ContactData}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\treturn summary;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tings: state.burgerBuilder.ingredients,\r\n\t\tpurchased: state.order.purchased,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React from 'react';\r\n\r\nimport styles from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n\tlet inputElement = null;\r\n\tconst inputStyles = [styles.InputElement];\r\n\r\n\t// Using && props.touched to make sure invalid styling only applies after element\r\n\t// has been interacted with\r\n\tif (props.invalid && props.shouldValidate && props.touched) {\r\n\t\tinputStyles.push(styles.Invalid);\r\n\t}\r\n\r\n\tswitch (props.elementType) {\r\n\t\tcase 'input':\r\n\t\t\tinputElement = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={inputStyles.join(' ')}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'textarea':\r\n\t\t\tinputElement = (\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName={inputStyles.join(' ')}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'select':\r\n\t\t\tinputElement = (\r\n\t\t\t\t<select\r\n\t\t\t\t\tclassName={inputStyles.join(' ')}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.elementConfig.options.map((option) => (\r\n\t\t\t\t\t\t<option key={option.value} value={option.value}>\r\n\t\t\t\t\t\t\t{option.displayValue}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tinputElement = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={inputStyles.join(' ')}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t}\r\n\r\n\tlet validationError = null;\r\n\tif (props.invalid && props.touched) {\r\n\t\tvalidationError = (\r\n\t\t\t<p>Please enter a valid {props.elementConfig.errorText}!</p>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.Input}>\r\n\t\t\t<label className={styles.Label}>{props.label}</label>\r\n\t\t\t{inputElement}\r\n\t\t\t{validationError}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2BpkO\",\"Label\":\"Input_Label__3ndKw\",\"InputElement\":\"Input_InputElement__uy91I\",\"Invalid\":\"Input_Invalid__2W9pf\",\"ValidationError\":\"Input_ValidationError__3mcbI\"};"],"sourceRoot":""}